#summary Überblick der Funktionen und Templates von `internals.xsl`
#labels Dokumentation

= `internals.xsl` =

Stylesheet: `internals.xsl`

Dieses Stylesheet enthält interne Templates und Funktionen, z.B. für Logging und Debug-Meldungen.


_Hinweis: Die Dokumentation entstammt dem Stylesheet selbst, die Funktionen und Templates sind dort ausführlich dokumentiert._

= Liste der Funktionen =

|| *C* || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#cast xsb:cast]*({{{arg}}} _as_ {{{xs:anyAtomicType}}}; {{{as}}} _as_ {{{xs:string}}}) ||   || wandelt einen Atomic Value beliebigen Types in einen Atomic Value mit Typ entsprechend dem Parameter "`as`" um ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#current-vendor-hash xsb:current-vendor-hash]*() ||   || Diese Funktion ermittelt den Vendor-Hash für das aktuelle System. ||
|| *I* || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#is xsb:is]*({{{input1}}}; {{{input2}}}) ||   || Diese Funktion vergleicht zwei beliebig getypte Werte und gibt bei Idendität `true()` zurück, d.h. der Vergleich ist eine Kombination aus `eq` und `deep-equal()` mit höherer Empfindlichkeit und einigen Sonderfällen. ||
|| *J* || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#java-available xsb:java-available]*() ||   || Diese Funktion ermittelt – zusammen mit der folgenden – ob Java auf dem ausführenden System zur Verfügung steht. ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#java-available xsb:java-available]*() ||   || Diese Funktion ermittelt – zusammen mit der folgenden – ob Java auf dem ausführenden System zur Verfügung steht. ||
|| *L* || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#logging-level xsb:logging-level]*({{{verbal-logging-level}}} _as_ {{{xs:string?}}}; {{{warn-if-wrong-input}}} _as_ {{{xs:boolean}}}) ||   || Diese Funktion wandelt die verbalen Logging-Level »`ALL`« > »`TRACE`« > »`DEBUG`« > »`INFO`« > »`WARN`« > »`ERROR`« > »`FATAL`« in korrspondierende Integer-Werte von 0 bis 6 um. ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#logging-level xsb:logging-level]*({{{verbal-logging-level}}} _as_ {{{xs:string?}}}) ||   || Diese Funktion wandelt die verbalen Logging-Level »`ALL`« > »`TRACE`« > »`DEBUG`« > »`INFO`« > »`WARN`« > »`ERROR`« > »`FATAL`« in korrspondierende Integer-Werte von 0 bis 6 um. ||
|| *N* || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#node-kind xsb:node-kind]*({{{context}}} _as_ {{{node()?}}}; {{{warn-if-wrong-input}}} _as_ {{{xs:boolean}}}) ||   || Diese Funktion ermittelt die Art eines `node()`, d.h. sie gibt je nach übergebenen Knoten einen der Werte »`document-node`«, »`element`«, »`attribute`«, »`text`«, »`comment`«, »`processing-instruction`« oder »`namespace`« zurück. Schlagen all Versuche zur Ermittlung fehl, wird der Wert `#undefined` zurückgegeben (Mir ist kein entsprechender Input-node() bekannt). ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#node-kind xsb:node-kind]*({{{context}}} _as_ {{{node()?}}}) ||   || Diese Funktion ermittelt die Art eines `node()`, d.h. sie gibt je nach übergebenen Knoten einen der Werte »`document-node`«, »`element`«, »`attribute`«, »`text`«, »`comment`«, »`processing-instruction`« oder »`namespace`« zurück. Schlagen all Versuche zur Ermittlung fehl, wird der Wert `#undefined` zurückgegeben (Mir ist kein entsprechender Input-node() bekannt). ||
|| *P* || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#parse-string-to-boolean xsb:parse-string-to-boolean]*({{{input}}} _as_ {{{xs:string?}}}; {{{warn-if-wrong-input}}} _as_ {{{xs:boolean}}}) ||   || Diese Funktion wandelt eine String-Eingabe in einen Boolean-Wert um. Sie kennt dabei mehr Begriffe als `boolean()`, z.B. »`ja`«/»`nein`«. ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#parse-string-to-boolean xsb:parse-string-to-boolean]*({{{input}}} _as_ {{{xs:string?}}}) ||   || Diese Funktion wandelt eine String-Eingabe in einen Boolean-Wert um. Sie kennt dabei mehr Begriffe als `boolean()`, z.B. »`ja`«/»`nein`«. ||
|| *R* || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#render-context-and-parent-as-string intern:render-context-and-parent-as-string]*({{{context}}} _as_ {{{node()?}}}) ||   || Diese Funktion erzeugt aus dem Kontext eines Knotens und dessen Elternknoten einen String in Form eines XPath-Ausdruckes, der diesen Knoten beschreibt. Kann z.B. zur Erläuterung bei Fehlermeldungen eingesetzt werden. ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#render-context-as-string xsb:render-context-as-string]*({{{context}}} _as_ {{{node()?}}}) ||   || Diese Funktion erzeugt aus dem Kontext eines Knotens einen String in Form eines XPath-Ausdruckes, der diesen Knoten beschreibt. Kann z.B. zur Erläuterung bei Fehlermeldungen eingesetzt werden. ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#render-level-to-pretext intern:render-level-to-pretext]*({{{level}}} _as_ {{{xs:string?}}}) ||   || Erzeugt zu den verbalen Fehlerwerten »`ALL`« > »`TRACE`« > »`DEBUG`« > »`INFO`« > »`WARN`« > »`ERROR`« > »`FATAL`« einen String, der bei ``xsb:internals.Error`` und verwandten Templates als `preText` verwendet werden kann. ||
|| *T* || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#type-annotation xsb:type-annotation]*({{{arg}}} _as_ {{{xs:anyAtomicType}}}; {{{warn-if-wrong-input}}} _as_ {{{xs:boolean}}}) ||   || ermittelt den Typ eines Atomic Values ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#type-annotation xsb:type-annotation]*({{{arg}}} _as_ {{{xs:anyAtomicType}}}) ||   || ermittelt den Typ eines Atomic Values ||
|| *V* || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#vendor-hash xsb:vendor-hash]*({{{product-name}}} _as_ {{{xs:string?}}}; {{{product-version}}} _as_ {{{xs:string?}}}; {{{java-available}}} _as_ {{{xs:boolean}}}; {{{is-schema-aware}}} _as_ {{{xs:boolean}}}; {{{warn-if-wrong-input}}} _as_ {{{xs:boolean}}}) ||   || Diese Funktion ermittelt aus den übergebenen System-Parameter einen Hashwert, der z.B. für Vergleiche verwendet werden kann ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#vendor-hash xsb:vendor-hash]*({{{product-name}}} _as_ {{{xs:string?}}}; {{{product-version}}} _as_ {{{xs:string?}}}; {{{java-available}}} _as_ {{{xs:boolean}}}; {{{is-schema-aware}}} _as_ {{{xs:boolean}}}) ||   || Diese Funktion ermittelt aus den übergebenen System-Parameter einen Hashwert, der z.B. für Vergleiche verwendet werden kann ||

= Liste der benannten Templates =

|| *I* || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#internals.Error xsb:internals.Error]* (_optional_ {{{message}}} _as_ {{{xs:string?}}}; _optional_ {{{level}}} _as_ {{{xs:string?}}}; _optional_ {{{caller}}} _as_ {{{xs:string?}}}; _optional_ {{{show-context}}} _as_ {{{xs:boolean}}}; _optional_ {{{write-to-file}}} _as_ {{{xs:boolean}}}) ||   || Dieses Template gibt eine einfache Fehlermeldung aus. Ausgabeart und -ziel werden über die Stylesheet-Parameter bestimmt, wenn keine expliziten Einstellungen übergeben werden. ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#internals.FatalError intern:internals.FatalError]* (_required_ {{{errorID}}} _as_ {{{xs:string?}}}; _required_ {{{caller}}} _as_ {{{xs:string?}}}) ||   || Dieses Template gibt eine Fehlermeldung bei Fehlern in der Logik der XSL-SB aus. Da das Ausführungsverhalten in solchen Situationen nicht vorhersehbar ist, wird die Verarbeitung abgebrochen. ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#internals.FunctionError xsb:internals.FunctionError]* (_optional_ {{{message}}} _as_ {{{xs:string?}}}; _optional_ {{{level}}} _as_ {{{xs:string?}}}; _optional_ {{{caller}}} _as_ {{{xs:string?}}}) ||   || Dieses Template gibt eine einfache Fehlermeldung aus. Es ist ein Wrapper für `xsb:internals.Error`, der die Rückgabe von Werten durch das Template unterbindet (was innerhalb von Funktionen in der Regel unerwünscht ist und ggfs. zu Fehlern führen kann). ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#internals.Log-system-properties xsb:internals.Log-system-properties]* (_optional_ {{{logging-level}}} _as_ {{{xs:string}}}) ||   || Dieses Template gibt die Werte der Funktion `system-property()` für die im XSLT-Standard vorgegebenen Parameter vgl. `http://www.w3.org/TR/xslt20/#function-system-property` aus. ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#internals.Logging xsb:internals.Logging]* (_optional_ {{{log-entry.preText}}} _as_ {{{xs:string?}}}; _optional_ {{{log-entry.ID}}} _as_ {{{xs:string?}}}; _optional_ {{{log-entry.timeStamp}}} _as_ {{{xs:dateTime?}}}; _optional_ {{{log-entry.processedFile}}} _as_ {{{xs:string?}}}; _optional_ {{{log-entry.level}}} _as_ {{{xs:string?}}}; _optional_ {{{log-entry.text}}} _as_ {{{xs:string?}}}; _optional_ {{{log-entry.category}}} _as_ {{{xs:string?}}}; _optional_ {{{log-entry.postText}}} _as_ {{{xs:string?}}}; _optional_ {{{log-entry.linebreak-string}}} _as_ {{{xs:string?}}}; _optional_ {{{log-entry.write-to-console}}} _as_ {{{xs:boolean}}}; _optional_ {{{log-entry.write-to-file}}} _as_ {{{xs:boolean}}}; _optional_ {{{log-entry.write-to-file-as-comment}}} _as_ {{{xs:boolean}}}; _optional_ {{{log-entry.write-to-file-as-element}}} _as_ {{{xs:boolean}}}; _optional_ {{{log-entry.write-to-file-as-html}}} _as_ {{{xs:boolean}}}; _optional_ {{{log-entry.write-to-file-as-text}}} _as_ {{{xs:boolean}}}; _optional_ {{{log-entry.write-preText}}} _as_ {{{xs:boolean}}}; _optional_ {{{log-entry.write-ID}}} _as_ {{{xs:boolean}}}; _optional_ {{{log-entry.write-timeStamp}}} _as_ {{{xs:boolean}}}; _optional_ {{{log-entry.write-processedFile}}} _as_ {{{xs:boolean}}}; _optional_ {{{log-entry.write-level}}} _as_ {{{xs:boolean}}}; _optional_ {{{log-entry.write-text}}} _as_ {{{xs:boolean}}}; _optional_ {{{log-entry.write-category}}} _as_ {{{xs:boolean}}}; _optional_ {{{log-entry.write-postText}}} _as_ {{{xs:boolean}}}) ||   || Dieses Template ist ein Wrapper für `intern:internals.logging.Output` für ein einfaches Logging. ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#internals.MakeFooter xsb:internals.MakeFooter]* ||   || Dieses Template erzeugt bei der Ausgabe in eine Datei den Fuß, z.B. das schließende HTML-Tag oder XML-Element. ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#internals.MakeHeader xsb:internals.MakeHeader]* ||   || Dieses Template erzeugt bei der Ausgabe in eine Datei den Dateikopf, z.B. das Wurzelelement in XML oder Wurzel und Head in HTML. ||
||   || *[http://xslt-sb.googlecode.com/svn/trunk/xslt-sb/doc/internals.html#internals.ProvisionalError intern:internals.ProvisionalError]* (_optional_ {{{message}}} _as_ {{{xs:string?}}}; _optional_ {{{level}}} _as_ {{{xs:string?}}}; _optional_ {{{caller}}} _as_ {{{xs:string?}}}; _optional_ {{{show-context}}} _as_ {{{xs:boolean}}}; _optional_ {{{write-to-file}}} _as_ {{{xs:boolean}}}) ||   || Zu Beginn der Verarbeitung von `internals.xsl` (und damit von allen Stylesheets, die `internals.xsl` einbinden), sind ein paar Parameter für das Logging noch nicht gesetzt. Um trotzdem eine Fehlermeldung zu ermöglichen (beispielsweise bei der Prüfung von Stylesheet-Parametern), wird im diesen Template eine Fehlermeldung unter Verzicht aus betroffene Parameter auf der Konsole ausgegeben. ||

_Hinweis: Diese Wiki-Seite wird automatisch aus der Dokumentation der einzenen Stylesheets der XSLT-SB erzeugt und soll deshalb nicht bearbeitet werden._

_Seite erstellt am 25.03.2012_

